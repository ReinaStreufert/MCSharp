<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="VersionData" xml:space="preserve">
    <value>Combat Test 8c	803	Combat Test 8b
Combat Test 8b	803	Combat Test 8b
Combat Test 7c	802
Combat Test 6	801
20w46a	1073741830
20w45a	1073741829
1.16.5	754
1.16.5 Release Candidate 1	1073741834
1.16.4	754
1.16.4 Release Candidate 1	1073741827
1.16.4 Pre-release 2	1073741826
1.16.4 Pre-release 1	1073741825
1.16.3	753
1.16.3 Release Candidate 1	752
1.16.2	751
1.16.2 Release Candidate 2	750
1.16.2 Release Candidate 1	749
1.16.2 Pre-release 3	748
1.16.2 Pre-release 2	746
1.16.2 Pre-release 1	744
20w30a	742
20w29a	741
20w28a	740
20w27a	738
1.16.1	736
1.16	735
1.16 Release Candidate 1	734
1.16 Pre-release 8	733
1.16 Pre-release 7	732
1.16 Pre-release 6	730
1.16 Pre-release 5	729
1.16 Pre-release 4	727
1.16 Pre-release 3	725
1.16 Pre-release 2	722
1.16 Pre-release 1	721
20w22a	719
20w21a	718
20w20b	717
20w20a	716
20w19a	715
20w18a	714
20w17a	713
20w16a	712
20w15a	711
20w14a	710
20w13b	709
20w13a	708
20w12a	707
20w11a	706
20w10a	705
20w09a	704
20w08a	703
20w07a	702
Snapshot 20w06a	701
Combat Test 5	601
Combat Test 4	600
1.15.2	578
1.15.2 Pre-release 2	577
1.15.2 Pre-Release 1	576
1.15.1	575
1.15.1 Pre-release 1	574
1.15	573
1.15 Pre-release 7	572
1.15 Pre-release 6	571
1.15 Pre-release 5	570
1.15 Pre-release 4	569
1.15 Pre-release 3	567
1.15 Pre-Release 2	566
1.15 Pre-release 1	565
19w46b	564
19w46a	563
19w45b	562
19w45a	561
19w44a	560
19w42a	559
19w41a	558
19w40a	557
19w39a	556
19w38b	555
19w38a	554
19w37a	553
19w36a	552
19w35a	551
19w34a	550
Combat Test 3	502
Combat Test 2	501
1.14.3 - Combat Test	500
1.14.4	498
1.14.4 Pre-Release 7	497
1.14.4 Pre-Release 6	496
1.14.4 Pre-Release 5	495
1.14.4 Pre-Release 4	494
1.14.4 Pre-Release 3	493
1.14.4 Pre-Release 2	492
1.14.4 Pre-Release 1	491
1.14.3	490
1.14.3 Pre-Release 4	489
1.14.3 Pre-Release 3	488
1.14.3 Pre-Release 2	487
1.14.3 Pre-Release 1	486
1.14.2	485
1.14.2 Pre-Release 4	484
1.14.2 Pre-Release 3	483
1.14.2 Pre-Release 2	482
1.14.2 Pre-Release 1	481
1.14.1	480
1.14.1 Pre-Release 2	479
1.14.1 Pre-Release 1	478
1.14	477
1.14 Pre-Release 5	476
1.14 Pre-Release 4	475
1.14 Pre-Release 3	474
1.14 Pre-Release 2	473
1.14 Pre-Release 1	472
19w14b	471
19w14a	470
19w13b	469
19w13a	468
19w12b	467
19w12a	466
19w11b	465
19w11a	464
19w09a	463
19w08b	462
19w08a	461
19w07a	460
19w06a	459
19w05a	458
19w04b	457
19w04a	456
19w03c	455
19w03b	454
19w03a	453
19w02a	452
18w50a	451
18w49a	450
18w48b	449
18w48a	448
18w47b	447
18w47a	446
18w46a	445
18w45a	444	
18w44a	443
18w43c	442
18w43b	441
18w43a	440
1.13.2	404
1.13.2-pre2	403
1.13.2-pre1	402
1.13.1	401
1.13.1-pre2	400
1.13.1-pre1	399
18w33a	398
18w32a	397
18w31a	396
18w30b	395
18w30a	394
1.13	393
1.13-pre10	392
1.13-pre9	391
1.13-pre8	390
1.13-pre7	389
1.13-pre6	388
1.13-pre5	387
1.13-pre4	386
1.13-pre3	385
1.13-pre2	384
1.13-pre1	383
18w22c	382
18w22b	381
18w22a	380
18w21b	379
18w21a	378
18w20c	377
18w20b	376
18w20a	375
18w19b	374
18w19a	373
18w16a	372
18w15a	371
18w14b	370
18w14a	369
18w11a	368
18w10d	367
18w10c	366
18w10b	365
18w10a	364
18w09a	363
18w08b	362
18w08a	361
18w07c	360
18w07b	359
18w07a	358
18w06a	357
18w05a	356
18w03b	355
18w03a	354
18w02a	353
18w01a	352
17w50a	351
17w49b	350
17w49a	349
17w48a	348
17w47b	347
17w47a	346
17w46a	345
17w45b	344
17w45a	343
17w43b	342
17w43a	341
1.12.2	340
1.12.2-pre2	339
1.12.2-pre1	339
1.12.1	338
1.12.1-pre1	337
17w31a	336
1.12	335
1.12-pre7	334
1.12-pre6	333
1.12-pre5	332
1.12-pre4	331
1.12-pre3	330
1.12-pre2	329
1.12-pre1	328
17w18b	327
17w18a	326
17w17b	325
17w17a	324
17w16b	323
17w16a	322
17w15a	321
17w14a	320
17w13b	319
17w13a	318
17w06a	317
1.11.2	316	1.11.1
1.11.1	316	1.11.1
16w50a	316	1.11.1
1.11	315
1.11-pre1	314
16w44a	313	16w43a
16w43a	313	16w43a
16w42a	312
16w41a	311
16w40a	310
16w39c	309
16w39b	308
16w39a	307
16w38a	306
16w36a	305
16w35a	304
16w33a	303
16w32b	302
16w32a	301
1.10.2	210	1.10
1.10.1	210	1.10
1.10	210	1.10
1.10-pre2	205
1.10-pre1	204
16w21b	203
16w21a	202
16w20a	201
1.9.4	110	1.9.3
1.9.3	110	1.9.3
1.9.3-pre3	110	1.9.3
1.9.3-pre2	110	1.9.3
1.9.3-pre1	109
16w15b	109	1.9.2
16w15a	109	1.9.2
16w14a	109	1.9.2
1.9.2	109	1.9.2
1.9.1	108	1.9.1
1.9.1-pre3	108	1.9.1
1.9.1-pre2	108	1.9.1
1.9.1-pre1	107	1.9
1.9	107	1.9
1.9-pre4	106
1.9-pre3	105
1.9-pre2	104
1.9-pre1	103
16w07b	102
16w07a	101
16w06a	100
16w05b	99
16w05a	98
16w04a	97
16w03a	96
16w02a	95
15w51b	94
15w51a	93
15w50a	92
15w49b	91
15w49a	90
15w47c	89
15w47b	88
15w47a	87
15w46a	86
15w45a	85
15w44b	84
15w44a	83
15w43c	82
15w43b	81
15w43a	80
15w42a	79
15w41b	78
15w41a	77
15w40b	76
15w40a	75
15w39c	74
15w39b	131
15w39a	130
15w38b	73
15w38a	72
15w37a	71
15w36d	70
15w36c	69
15w36b	68
15w36a	67
15w35e	66
15w35d	65
15w35c	64
15w35b	63
15w35a	62
15w34d	61
15w34c	60
15w34b	59
15w34a	58
15w33c	57
15w33b	56
15w33a	55
15w32c	54
15w32b	53
15w32a	52
15w31c	51
15w31b	50
15w31a	49
1.8.9	47
1.8.8	47
1.8.7	47
1.8.6	47
1.8.5	47
1.8.4	47
1.8.3	47
1.8.2	47
1.8.2-pre7	47	1.8
1.8.2-pre6	47	1.8
1.8.2-pre5	47	1.8
1.8.2-pre4	47	1.8
1.8.2-pre3	47	1.8
1.8.2-pre2	47	1.8
1.8.2-pre1	47	1.8
1.8.1	47	1.8
1.8.1-pre5	47	1.8
1.8.1-pre4	47	1.8
1.8.1-pre3	47	1.8
1.8.1-pre2	47	1.8
1.8.1-pre1	47	1.8
1.8	47	1.8
1.8-pre3	46
1.8-pre2	45
1.8-pre1	44
14w34d	43
14w34c	42
14w34b	41
14w34a	40
14w33c	39
14w33b	38
14w33a	37
14w32d	36
14w32c	35
14w32b	34
14w32a	33
14w31a	32
14w30c	31
14w30b	30	14w30a
14w30a	30	14w30a
14w29b	29	14w29a
14w29a	29	14w29a
14w28b	28
14w28a	27
14w27b	26	14w27a
14w27a	26	14w27a
14w26c	25
14w26b	24
14w26a	23
14w25b	22
14w25a	21
14w21b	20
14w21a	19
14w20b	18	14w20a
14w20a	18	14w20a
14w19a	17
14w18b	16	14w18a
14w18a	16	14w18a
14w17a	15
14w11b	14	14w11a
14w11a	14	14w11a
14w10c	13	14w10a
14w10b	13	14w10a
14w10a	13	14w10a
14w08a	12
14w07a	11
14w06b	10	14w06a
14w06a	10	14w06a
14w05b	9	14w05a
14w05a	9	14w05a
14w04b	8
14w04a	7
14w03b	6	14w03a
14w03a	6	14w03a
14w02c	5	1.7.6
14w02b	5	1.7.6
14w02a	5	1.7.6
1.7.10	5	1.7.6
1.7.10-pre4	5	1.7.6
1.7.10-pre3	5	1.7.6
1.7.10-pre2	5	1.7.6
1.7.10-pre1	5	1.7.6
1.7.9	5	1.7.6
1.7.8	5	1.7.6
1.7.7	5	1.7.6
1.7.6	5	1.7.6
1.7.6-pre2	5	1.7.6
1.7.6-pre1	5	1.7.6
1.7.5	4	1.7.2
1.7.4	4	1.7.2
1.7.3	4	1.7.2
13w49a	4	1.7.2
13w48b	4	1.7.2
13w48a	4	1.7.2
13w47e	4	1.7.2
13w47d	4	1.7.2
13w47c	4	1.7.2
13w47b	4	1.7.2
13w47a	4	1.7.2
1.7.2	4	1.7.2
1.7.1	3	1.7
1.7	3	1.7
13w43a	2
13w42b	1	13w42a
13w42a	1	13w42a
13w41b	0	13w41a
13w41a	0	13w41a</value>
  </data>
</root>